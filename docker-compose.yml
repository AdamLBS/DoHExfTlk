version: '3.9'

networks:
  dohnet:
    driver: bridge

services:

  # üß† R√©solveur DNS r√©cursif (Unbound)
  resolver:
    image: mvance/unbound
    container_name: doh_resolver
    networks:
      - dohnet
    restart: unless-stopped
    ports:
      - "5053:53/udp"  # port DNS ouvert en local (facultatif)

  # üåê Serveur DoH avec HTTPS et certificat auto-sign√©
  doh_server:
    image: satishweb/doh-server
    container_name: doh_server
    networks:
      - dohnet
    ports:
      - "8053:8053"  # HTTP DoH, pas HTTPS ici
    environment:
      UPSTREAM_DNS_SERVER: "udp:doh_resolver:53"
      DOH_HTTP_PREFIX: "/dns-query"
      DOH_SERVER_LISTEN: ":8053"
      DOH_SERVER_TIMEOUT: "10"
      DOH_SERVER_TRIES: "3"
      DOH_SERVER_VERBOSE: "true"

  # üßë‚Äçüíª Conteneur pour simuler un attaquant ou DNSExfiltrator
  exfil_client:
    image: ubuntu
    container_name: dns_exfiltrator
    networks:
      - dohnet
    tty: true
    stdin_open: true
    entrypoint: [ "sleep", "infinity" ]
    volumes:
      - ./scripts:/scripts  # Tu peux mettre des scripts d‚Äôexfiltration ici

  # üõ°Ô∏è Conteneur pour la d√©tection (DoHLyzer, etc.)
  detector:
    build:
      context: ./detector
    container_name: doh_detector
    networks:
      - dohnet
    volumes:
      - ./data:/data
      - ./output:/output
    entrypoint: [ "sleep", "infinity" ]  # √Ä remplacer par ta commande r√©elle
