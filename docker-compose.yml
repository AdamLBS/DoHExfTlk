version: '3.9'

services:

  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: always
    networks:
      - dohnet
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/certs:ro
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.file.directory=/certs"
      - "--providers.file.watch=true"

  doh_server:
    image: satishweb/doh-server:latest
    container_name: doh_server
    networks:
      - dohnet
    depends_on:
      - resolver
    environment:
      UPSTREAM_DNS_SERVER: "udp:resolver:53"
      DOH_HTTP_PREFIX: "/dns-query"
      DOH_SERVER_LISTEN: ":8053"
      DOH_SERVER_TIMEOUT: "10"
      DOH_SERVER_TRIES: "3"
      DOH_SERVER_VERBOSE: "true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.doh.rule=Host(`doh.local`)"
      - "traefik.http.routers.doh.entrypoints=websecure"
      - "traefik.http.routers.doh.tls=true"
      - "traefik.http.services.doh.loadbalancer.server.port=8053"
      # Redirection HTTP vers HTTPS
      - "traefik.http.routers.doh-http.rule=Host(`doh.local`)"
      - "traefik.http.routers.doh-http.entrypoints=web"
      - "traefik.http.routers.doh-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  resolver:
    image: mvance/unbound
    container_name: resolver
    networks:
      - dohnet
    volumes:
      - ./resolver/unbound.conf:/etc/unbound/unbound.conf:ro

  client_test:
    image: ubuntu:22.04
    container_name: client_test
    networks:
      - dohnet
    depends_on:
      - doh_server
      - traefik
    command: >
      bash -c "
        TRAEFIK_IP=$$(getent hosts traefik | awk '{ print $$1 }') &&
        echo \"$$TRAEFIK_IP doh.local\" >> /etc/hosts &&
        apt-get update -q &&
        apt-get install -y curl dnsutils jq openssl ca-certificates netcat-openbsd iputils-ping &&
        echo \"Configuration terminÃ©e. Traefik IP: $$TRAEFIK_IP\" &&
        exec sleep infinity
      "
    volumes:
      - ./client_scripts:/scripts:ro
    environment:
      - DOH_SERVER=https://doh.local/dns-query
      - PYTHONUNBUFFERED=1

  # Service d'interception du trafic DoH pour capturer l'exfiltration
  exfil_interceptor:
    build: 
      context: ./exfiltration
      dockerfile: Dockerfile.server
    container_name: exfil_interceptor
    network_mode: host
    cap_add:
      - NET_RAW
      - NET_ADMIN
    volumes:
      - ./exfiltration/captured:/app/captured
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - OUTPUT_DIR=/app/captured
      - DOH_DOMAINS=doh.local,exfill.local
      - CAPTURE_FILTER=port 53 or port 443 or port 8080
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    depends_on:
      - resolver
      - doh_server
      
  # Analyseur de trafic DoH avec DoHLyzer
  traffic_analyzer:
    build:
      context: ./traffic_analyzer
      dockerfile: Dockerfile
    container_name: traffic_analyzer
    network_mode: host
    cap_add:
      - NET_RAW
      - NET_ADMIN
    volumes:
      - ./traffic_analyzer/output:/app/output
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - PYTHONUNBUFFERED=1
      - OUTPUT_DIR=/app/output
    restart: unless-stopped
    depends_on:
      - doh_server
      - traefik

  # Client d'exfiltration pour les tests
  exfil_client:
    build:
      context: ./exfiltration
      dockerfile: Dockerfile.client
    container_name: exfil_client
    networks:
      - dohnet
    depends_on:
      - doh_server
      - traefik
      - exfil_interceptor
    volumes:
      - ./exfiltration/test_data:/app/test_data
    environment:
      - DOH_SERVER=https://doh.local/dns-query
      - TARGET_DOMAIN=exfill.local
      - PYTHONUNBUFFERED=1
    command: >
      bash -c "
        echo 'Waiting for DoH infrastructure...' &&
        TRAEFIK_IP=$$(getent hosts traefik | awk '{ print $$1 }') &&
        echo \"$$TRAEFIK_IP doh.local\" >> /etc/hosts &&
        echo 'Starting DoH exfiltration tests...' &&
        python quick_test.py /app/test_data/image.png"


networks:
  dohnet:
    driver: bridge
